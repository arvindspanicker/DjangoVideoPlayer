# Generated by Django 2.1.7 on 2019-02-18 11:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('comment', models.TextField(blank=True, default='', max_length=280, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='comment_related_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dislikes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('disliked', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dislikes_related_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('liked', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='likes_related_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('title', models.CharField(max_length=80, unique=True)),
                ('video_file', models.FileField(upload_to='')),
                ('generated_link', models.CharField(blank=True, default='', max_length=180, null=True)),
                ('views', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='likes',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='likes_related_video', to='videos.Videos'),
        ),
        migrations.AddField(
            model_name='dislikes',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dislikes_related_video', to='videos.Videos'),
        ),
        migrations.AddField(
            model_name='comment',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='comment_related_video', to='videos.Videos'),
        ),
    ]
